# 00002: Trust domain introduction
- Authors: [Mike Bursell](you@github-email)
- Status: [PROPOSED](/README.md#proposed)
- Since: 2020-02-13
- Status Note: under discussion
- Start Date: 2020-02-11
- Tags: trust

## Summary

Trust domains are a key concept within Enarx.  This RFC provides an
introduction to trust domains.

## Motivation

In order to explain the motivations behind Enarx, our design principles
and aims, we need to be able to explain what trust domains are.  This RFC
attempts to provide an introduction.

## Tutorial

A definition of trust, from [What is trust?](http://aliceevebob.com/2017/05/09/what-is-trust-with-apologies-to-pontius-pilate/).

"Trust is the assurance that one entity holds that another will
perform particular actions according to a specific expectation."
First corollary: "Trust is always contextual."
Second corollary: "One of the contexts for trust is always time."
Third corollary: "Trust relationships are not symmetrical."

### Applying this to Enarx
The key trust relationship for Enarx is that held by the tenant
(workload owner) to that workload.  Enarx aims to provide assurances to
the tenant that the integrity and confidentiality of that workload are
protected: these are the key contexts of that trust, and actions can be
assured if they are maintained.  Trust may decay or be built up in the
workload - the time context.  In this case, the workload does not have an
equivalent set of assurances about the tenant, so the relationship is
not symmetrical.

### Trust domains
A trust domain can be defined as a set of entities or components that
share the same security policies.  These may be human or machine, but
machine entities are usually assumed, and are what are relevant to Enarx.
We can refer to these entities as members of a trust docmain.  Trust
domains can be subsets or supersets of other trust domains, but may not
intersect: a true intersection between two trust domains implies that
they share the same policies, which means that they are in union.

Members of a trust domain, by definition, trust each other to perform
particular actions - typically to provide particular services.  Trust
relationships within a trust domain are irrelevant to its external view,
as a trust domain provides a single unit of trust from the point of view
of external entities: it is a system-type abstraction.  A trust domain
has a single identity, when considered from external parties, as although
multiple components within a trust domain may expose interfaces which
can be accessed externally, they are considered to represent the trust
domain.  If such interfaces are exposed by a component in a trust domain
but do _not_ represent the trust domain to which it belongs, that
component is likely misplaced.  All interactions between trust domains
- or from any external entity to a trust domain - should occur across
well-defined interfaces, preferably to well-defined specifications.  
Without these assurances, it is not possible for external parties to form
trust relationships with the trust domain as defined above.


## Reference

n/a

## Drawbacks

n/a

## Rationale and alternatives

n/a

## Prior art

n/a

## Unresolved questions

n/a

## Implementations

None.

## Future Possibilities

None.