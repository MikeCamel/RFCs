# 00006 Trust anchors and pivots
- Authors: [Mike Bursell](mike@p2ptrust.org)
- Status: [PROPOSED](/README.md#proposed)
- Since: 2020-03-09 (date you submit your PR)
- Status Note: discussion
- Supersedes: n/a
- Start Date: 2020-03-16 
- Tags: trust

## Summary

Trust anchors and trust pivots allow us to discuss how trust domains are
created and modified.

## Motivation

In order to describe some of the key features of Enarx, the concepts of
trust anchors and trust pivots need to be defined and explained.  This
RFC aims to provide that information.

## Tutorial

This RFC introduces three concepts:
- Endorsing authorities
- Trust anchors
- Trust pivots

These concepts are important to allow us to discuss how the various
components of Enarx work together.  These definitions are taken from
"Trust in computer systems and the cloud", Mike Bursell, not yet
published.

### Endorsing authorities
An endorsing authority is a human or organisational entity to
whom a trust relationship has been established.  An endorsing
authority can provide one or more trust anchors, endorsing them
as representing properties of another human or organisation
(such as their identity, physical location or ability to access
credit).  Endorsing authorities are sometimes referred to as
"trust anchors" - for our purposes, we consider the former as
endorsing the latter.

### Trust anchor
A trust anchor is a static component in a system whereby an
endorsing authority allows trustors to assume trust in a system
in which the anchor is contained.  Trust anchors are static in
terms of their interaction with a trust system, and the trust
relationship to a trust anchor is assumed - based on the endorsing
authority - rather than derived.  One exampele of a trust anchor
is a root certificate signed by a Certificate Authority (the
endorsing authority in this case).

### Trust pivot
A trust pivot is a component which allows a trust relationship
from one entity to another to be transferred, or added, to another
entity.  The validity of the pivot assumes the existence of one or more trust anchors.

## Reference

Provide guidance for implementers, procedures to inform testing,
interface definitions, formal function prototypes, error codes,
diagrams, and other technical details that might be looked up.
Strive to guarantee that:

- Interactions with other features are clear.
- Implementation trajectory is well defined.
- Corner cases are dissected by example.

## Drawbacks

n/a

## Rationale and alternatives

n/a

## Prior art

n/a

## Unresolved questions

n/a

## Implementations

n/a

## Future Possibilities

n/a
